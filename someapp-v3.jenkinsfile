#!groovy

pipeline {
    agent any

    environment {
        BUILD_NUMBER = "${env.BUILD_NUMBER}"
        NEXUS_REPOSITORY = "sb1w001:6031"
    }

    stages {
        stage("Setup") {
            steps {
                echo "----- BUILD_NUMBER is $BUILD_NUMBER"
            }
        }

        stage("Docker Login") {
            steps {
                script {
                    withCredentials(
                            [usernamePassword(
                                    credentialsId: "sb-nexus",
                                    usernameVariable: "NEXUS_USERNAME",
                                    passwordVariable: "NEXUS_PASSWORD"
                            )]
                    ) {
                        echo "Logging into docker with $NEXUS_USERNAME/$NEXUS_PASSWORD"
                        sh "docker login --username $NEXUS_USERNAME --password $NEXUS_PASSWORD $NEXUS_REPOSITORY"
                    }
                }
            }
        }

        stage("Docker Build Image") {
            steps {
                script {
                    sh "docker build --tag sb-someapp-i3 --file someapp-v3.dockerfile ."
                }
            }
        }

        stage("Docker Run Container") {
            steps {
                // CHANGE_ID seems to always be 1
                echo "----- CHANGE_ID is $CHANGE_ID"

                // CHANGE_BRANCH is somestory
                echo "----- CHANGE_BRANCH is $CHANGE_BRANCH"

                // CHANGE_TARGET is main
                echo "----- CHANGE_TARGET is $CHANGE_TARGET"

                //
                // v3 fails!!!
                //
                // do not copy source, map drive.
                // run via --entrypoint on commandline.
                //
                // mapped drive overrides source in container.
                // therefore node_modules in container not seen.
                //
                // also sonar-scanner then seems to not use or work with 'host.docker.internal'?
                //
                sh "docker run --rm --entrypoint bash --name sb-someapp-c3 --volume '$WORKSPACE':/app sb-someapp-i3 someapp-entry.sh"
            }
        }
    }
}
